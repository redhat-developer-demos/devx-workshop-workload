---
# This is required to generate the htpasswd file 
- name:  Install passlib 
  pip:
   name: passlib
   state: present
  when: gen_htpasswd_file | bool
   
- name: Create Workshop Users
  htpasswd:
    path: "{{password_file}}"
    name: "{{ 'dev%03d' | format(item) }}"
    password: "{{default_dev_password}}"
    crypt_scheme: md5_crypt
  loop: "{{ range(1,workshop_users_max)|list }}"
  when: gen_htpasswd_file | bool

- name: Create htpasswd secret 
  command: | 
    "oc -n openshift-config create secret generic {{htpasswd_secret_name}} --from-file=htpasswd=password_file"
  when: gen_htpasswd_file | bool

- name: Create Workshop User Projects
  # debug:
  #   msg: "oc new-project {{ 'dev%03d' | format(item[0])}}-{{item[1]}}"
  command: | 
   "oc new-project {{ 'dev%03d' | format(item[0])}}-{{item[1]}}"
  loop: "{{ range(1,workshop_users_max) | product(['istiotutorial','knativetutorial','sandbox']) | list }}"

- name: Make Workshop Users Admin for their own Projects
  # debug:
  #   msg: "oc policy add-role-to-user admin {{ 'dev%03d' | format(item[0])}} -n {{ 'dev%03d' | format(item[0])}}-{{item[1]}}"
  command: |
    "oc adm policy add-scc-to-user privileged -z default -n {{ 'dev%03d' | format(item[0])}}-{{item[1]}}" && \
    "oc adm policy add-scc-to-user anyuid -z default -n {{ 'dev%03d' | format(item[0])}}-{{item[1]}}" && \
    "oc policy add-role-to-user admin  {{ 'dev%03d' | format(item[0])}} -n {{ 'dev%03d' | format(item[0])}}-{{item[1]}}"
  loop: "{{ range(1,workshop_users_max) | product(['istiotutorial','knativetutorial','sandbox']) | list }}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
  when: not silent|bool
